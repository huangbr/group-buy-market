25-03-12.15:06:55.274 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_311 on LAPTOP-188ICRL6 with PID 20724 (started by huangbr in E:\Java\group-buy-market\group-buy-market-app)
25-03-12.15:06:55.275 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-12.15:06:56.022 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-12.15:06:56.025 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-12.15:06:56.075 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
25-03-12.15:06:56.367 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [edu.jnu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$29af0422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:06:56.754 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-edu.jnu.config.RedisClientConfigProperties' of type [edu.jnu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:06:57.291 [main            ] INFO  Version                - Redisson 3.26.0
25-03-12.15:06:57.877 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:06:58.255 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:06:58.292 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonCLient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:07:00.495 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-12.15:07:00.544 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 5.591 seconds (JVM running for 6.311)
25-03-12.15:07:00.958 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg03 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"686514819933","source":"s01","userId":"xfg03"}
25-03-12.15:07:00.959 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-查询未支付的订单 userId:xfg03 outTradeNo:686514819933
25-03-12.15:07:00.982 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-12.15:07:02.147 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-12.15:07:02.226 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:07:02.443 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-12.15:07:02.444 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:07:02.444 [main            ] INFO  MJCalculateService     - 优惠策略折扣类型：0
25-03-12.15:07:02.540 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:07:02.543 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-锁定营销优惠订单 userId:xfg03 activityId:100123 goodsId:9890001
25-03-12.15:07:02.545 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动可用性校验xfg03 activityId:100123
25-03-12.15:07:02.596 [main            ] INFO  ActivityUsabilityRuleFilter - 活动时间校验-非活动可参与时间范围 activityId:GroupBuyActivityEntity(activityId=100123, activityName=测试活动, discountId=25120208, groupType=0, takeLimitCount=1, target=3, validTime=15, status=EFFECTIVE, startTime=Sat Dec 07 10:19:40 CST 2024, endTime=Sun Dec 07 10:19:40 CST 2025, tagId=RQ_KJHKL98UU78H66554GFDV, tagScope=3)
25-03-12.15:07:02.603 [main            ] ERROR MarketTradeController  - 营销交易锁单业务异常:xfg03 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"686514819933","source":"s01","userId":"xfg03"}
edu.jnu.types.exception.AppException: null
	at edu.jnu.domain.trade.service.filter.ActivityUsabilityRuleFilter.apply(ActivityUsabilityRuleFilter.java:48)
	at edu.jnu.domain.trade.service.filter.ActivityUsabilityRuleFilter.apply(ActivityUsabilityRuleFilter.java:22)
	at edu.jnu.types.design.framework.link.model2.chain.BusinessLinkedList.apply(BusinessLinkedList.java:21)
	at edu.jnu.domain.trade.service.TradeOrderServiceImpl.lockMarketPayOrder(TradeOrderServiceImpl.java:42)
	at edu.jnu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:106)
	at edu.jnu.test.domain.trade.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-03-12.15:07:02.606 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"686514819933","source":"s01","userId":"xfg03"} res:{"code":"E0102","info":"不在拼团活动有效时间内"}
25-03-12.15:07:02.620 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-12.15:07:02.740 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-12.15:08:08.185 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_311 on LAPTOP-188ICRL6 with PID 30292 (started by huangbr in E:\Java\group-buy-market\group-buy-market-app)
25-03-12.15:08:08.185 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-12.15:08:08.859 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-12.15:08:08.863 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-12.15:08:08.901 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
25-03-12.15:08:09.164 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [edu.jnu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$34bce53e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:08:09.433 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-edu.jnu.config.RedisClientConfigProperties' of type [edu.jnu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:08:09.961 [main            ] INFO  Version                - Redisson 3.26.0
25-03-12.15:08:10.542 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:08:10.934 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:08:10.968 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonCLient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:08:13.282 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-12.15:08:13.335 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 5.464 seconds (JVM running for 6.157)
25-03-12.15:08:13.654 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg03 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"645689023380","source":"s01","userId":"xfg03"}
25-03-12.15:08:13.654 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-查询未支付的订单 userId:xfg03 outTradeNo:645689023380
25-03-12.15:08:13.677 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-12.15:08:14.855 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-12.15:08:14.936 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:08:15.147 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-12.15:08:15.148 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:08:15.148 [main            ] INFO  MJCalculateService     - 优惠策略折扣类型：0
25-03-12.15:08:15.243 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:08:15.246 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-锁定营销优惠订单 userId:xfg03 activityId:100123 goodsId:9890001
25-03-12.15:08:15.247 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动可用性校验xfg03 activityId:100123
25-03-12.15:08:15.299 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xfg03 activityId:100123
25-03-12.15:08:15.777 [main            ] ERROR MarketTradeController  - 营销交易锁单服务失败:xfg03 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"645689023380","source":"s01","userId":"xfg03"}
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'biz_id' doesn't have a default value
### The error may exist in file [E:\Java\group-buy-market\group-buy-market-app\target\classes\mybatis\mapper\group_buy_order_list_mapper.xml]
### The error may involve edu.jnu.infrastructure.dao.IGroupBuyOrderListDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into group_buy_order_list(             user_id, team_id, order_id, activity_id, start_time,             end_time, goods_id, source, channel, original_price,             deduction_price, status, out_trade_no, create_time, update_time         )         values(             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, now(), now()         )
### Cause: java.sql.SQLException: Field 'biz_id' doesn't have a default value
; Field 'biz_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'biz_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:251)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy96.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy103.insert(Unknown Source)
	at edu.jnu.infrastructure.adapter.repository.TradeRepository.lockMarketPayOrder(TradeRepository.java:132)
	at edu.jnu.infrastructure.adapter.repository.TradeRepository$$FastClassBySpringCGLIB$$f8dcbdff.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at edu.jnu.infrastructure.adapter.repository.TradeRepository$$EnhancerBySpringCGLIB$$54331513.lockMarketPayOrder(<generated>)
	at edu.jnu.domain.trade.service.TradeOrderServiceImpl.lockMarketPayOrder(TradeOrderServiceImpl.java:64)
	at edu.jnu.trigger.http.MarketTradeController.lockMarketPayOrder(MarketTradeController.java:106)
	at edu.jnu.test.domain.trade.MarketTradeControllerTest.test_lockMarketPayOrder(MarketTradeControllerTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.sql.SQLException: Field 'biz_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 58 common frames omitted
25-03-12.15:08:15.780 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"645689023380","source":"s01","userId":"xfg03"} res:{"code":"0001","info":"未知失败"}
25-03-12.15:08:15.793 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-12.15:08:16.031 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-12.15:10:13.153 [main            ] INFO  MarketTradeControllerTest - Starting MarketTradeControllerTest using Java 1.8.0_311 on LAPTOP-188ICRL6 with PID 29284 (started by huangbr in E:\Java\group-buy-market\group-buy-market-app)
25-03-12.15:10:13.154 [main            ] INFO  MarketTradeControllerTest - The following 1 profile is active: "dev"
25-03-12.15:10:13.825 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-12.15:10:13.828 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-12.15:10:13.865 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
25-03-12.15:10:14.144 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [edu.jnu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$29af0422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:10:14.413 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-edu.jnu.config.RedisClientConfigProperties' of type [edu.jnu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:10:14.945 [main            ] INFO  Version                - Redisson 3.26.0
25-03-12.15:10:15.550 [redisson-netty-1-5] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:10:15.933 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:10:15.971 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonCLient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:10:18.354 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-12.15:10:18.416 [main            ] INFO  MarketTradeControllerTest - Started MarketTradeControllerTest in 5.6 seconds (JVM running for 6.303)
25-03-12.15:10:18.796 [main            ] INFO  MarketTradeController  - 营销交易锁单:xfg03 LockMarketPayOrderRequestDTO:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"891123714300","source":"s01","userId":"xfg03"}
25-03-12.15:10:18.796 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-查询未支付的订单 userId:xfg03 outTradeNo:891123714300
25-03-12.15:10:18.820 [main            ] INFO  HikariDataSource       - HikariPool-1 - Starting...
25-03-12.15:10:20.240 [main            ] INFO  HikariDataSource       - HikariPool-1 - Start completed.
25-03-12.15:10:20.325 [main            ] INFO  RootNode               - 拼团商品查询试算服务-RootNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:10:20.531 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 异步线程加载数据「GroupBuyActivityDiscountVO、SkuVO」完成
25-03-12.15:10:20.531 [main            ] INFO  MarketNode             - 拼团商品查询试算服务-MarketNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:10:20.531 [main            ] INFO  MJCalculateService     - 优惠策略折扣类型：0
25-03-12.15:10:20.625 [main            ] INFO  EndNode                - 拼团商品查询试算服务-EndNode userId:xfg03 requestParameter:{"channel":"c01","goodsId":"9890001","source":"s01","userId":"xfg03"}
25-03-12.15:10:20.628 [main            ] INFO  TradeOrderServiceImpl  - 拼团交易-锁定营销优惠订单 userId:xfg03 activityId:100123 goodsId:9890001
25-03-12.15:10:20.629 [main            ] INFO  ActivityUsabilityRuleFilter - 交易规则过滤-活动可用性校验xfg03 activityId:100123
25-03-12.15:10:20.680 [main            ] INFO  UserTakeLimitRuleFilter - 交易规则过滤-用户参与次数校验xfg03 activityId:100123
25-03-12.15:10:21.102 [main            ] INFO  MarketTradeController  - 交易锁单记录(新):xfg03 marketPayOrderEntity:{"deductionPrice":10.00,"orderId":"502140133468","tradeOrderStatusEnumVO":"CREATE"}
25-03-12.15:10:21.105 [main            ] INFO  MarketTradeControllerTest - 测试结果 req:{"activityId":100123,"channel":"c01","goodsId":"9890001","outTradeNo":"891123714300","source":"s01","userId":"xfg03"} res:{"code":"0000","data":{"deductionPrice":10.00,"orderId":"502140133468","tradeOrderStatus":0},"info":"成功"}
25-03-12.15:10:21.120 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
25-03-12.15:10:21.322 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
25-03-12.15:28:07.619 [main            ] INFO  Link02Test             - Starting Link02Test using Java 1.8.0_311 on LAPTOP-188ICRL6 with PID 26032 (started by huangbr in E:\Java\group-buy-market\group-buy-market-app)
25-03-12.15:28:07.620 [main            ] INFO  Link02Test             - The following 1 profile is active: "dev"
25-03-12.15:28:08.376 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-03-12.15:28:08.379 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-03-12.15:28:08.424 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
25-03-12.15:28:08.710 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisClientConfig' of type [edu.jnu.config.RedisClientConfig$$EnhancerBySpringCGLIB$$69624ebc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:28:09.020 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redis.sdk.config-edu.jnu.config.RedisClientConfigProperties' of type [edu.jnu.config.RedisClientConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:28:09.604 [main            ] INFO  Version                - Redisson 3.26.0
25-03-12.15:28:10.209 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:28:10.584 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 117.72.54.141/117.72.54.141:16379
25-03-12.15:28:10.625 [main            ] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redissonCLient' of type [org.redisson.Redisson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
25-03-12.15:28:13.183 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
25-03-12.15:28:13.239 [main            ] INFO  Link02Test             - Started Link02Test in 6.006 seconds (JVM running for 7.218)
25-03-12.15:28:59.021 [main            ] INFO  RuleLogic201           - link model02 RuleLogic201
25-03-12.15:29:39.749 [main            ] INFO  RuleLogic202           - link model02 RuleLogic202
25-03-12.15:29:56.106 [main            ] INFO  Link02Test             - 测试结果:{"age":"hi 小傅哥！"}
